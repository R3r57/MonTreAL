version: '3.3'

networks:
  backend:

services:
  nsqlookupd:
    image: nsqio/nsq:latest
    entrypoint: nsqlookupd
    ports:
      # tcp
      - "4160:4160"
      # http
      - "4161:4161"
    networks:
      backend:

  nsqd:
    image: nsqio/nsq:latest
    entrypoint: ["nsqd", "--lookupd-tcp-address=nsqlookupd:4160"]
    ports:
      # tcp
      - "4150:4150"
      # http
      - "4151:4151"
      # https
#      - "4152:4152"
    networks:
      backend:

  memcached:
    image: memcached:latest
    command: memcached -vv
    networks:
      backend:

  nsqadmin:
    image: nsqio/nsq:latest
    entrypoint: ["nsqadmin", "--lookupd-http-address=nsqlookupd:4161"]
    networks:
      backend:
    ports:
      - "4171:4171"

#################################################
  manager:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./location.info:/etc/location.info
      - ./pi-hostname:/etc/pi-hostname
    networks:
      backend:
    tty: true
    environment:
      SERVICE: "manager"

#################################################
  web:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    networks:
      backend:
    tty: true
    ports:
      - "5000:5000"
    environment:
      SERVICE: "prtgweb"

#################################################
  prtg:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    networks:
      backend:
    tty: true
    environment:
      SERVICE: "prtgconvert"

  json:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    networks:
      backend:
    tty: true
    environment:
      SERVICE: "rawjson"

#################################################
  prtgregister:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    networks:
      backend:
    tty: true
    environment:
      SERVICE: "prtgregister"

  list:
    build:
      context: ./
      dockerfile: Dockerfile.amd64
    image: montreal
    networks:
      backend:
    tty: true
    environment:
      SERVICE: "sensorlist"
