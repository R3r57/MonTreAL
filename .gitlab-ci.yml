##############
### Runner ###
##############
.runner_socket: &runner_socket
  image: docker:latest
  tags:
    - socket
    - amd64

.runner_deploy: &runner_deploy
  image: docker:latest
  tags:
    - deploy
    - amd64

.tagging:
  script: &tagging
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}${ARCH}
    - docker tag ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}${ARCH} ${CI_REGISTRY_IMAGE}:${NEW_TAG}${ARCH}
    - docker push ${CI_REGISTRY_IMAGE}:${NEW_TAG}${ARCH}

.building:
  script: &building
    # enable qemu (needed when building for arm)
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    # login to private registry
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    # add qemu
    - apk add -U curl
    - curl -sL https://github.com/multiarch/qemu-user-static/releases/download/v2.9.1/qemu-arm-static.tar.gz | tar -xzC docker/src/
    # build and push image
#    - docker build --pull --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=${CI_COMMIT_SHA} --build-arg VERSION=${CI_COMMIT_TAG} -t ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID} .

    - docker build --pull --build-arg VCS_URL=${CI_PROJECT_URL} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=${CI_COMMIT_SHA} --build-arg VERSION=${CI_COMMIT_TAG} -t ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}${ARCH} -f ./docker/Dockerfile${DOTARCH} ./docker/
    - docker push ${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}${ARCH}

#####################################
stages:
  - code:test
  - img:build
  - img:tag

  - deploy:test
  - deploy:staging
  - deploy:production

.global_variables: &global_variables
    DOCKER_HOST: unix:///var/run/docker.sock
    SERVER_DOMAIN: staging.uni-bamberg.de

#############
### Tests ###
#############
pep8:
  stage: code:test
  <<: *runner_socket
  image: python:3.6.2-slim
  allow_failure: true
  script:
    - pip3 install pycodestyle
    - cd docker/src
    - find . -type f -name '*.py' -exec  pycodestyle --first {} \;

###################
### Build Image ###
###################
img:amd64:
  stage: img:build
  variables:
    <<: *global_variables
    ARCH: -amd64
    DOTARCH: .amd64
  <<: *runner_socket
  script: *building

img:arm:
  stage: img:build
  variables:
    <<: *global_variables
    ARCH: -arm
    DOTARCH: .arm
  <<: *runner_socket
  script: *building

#################
### Tag Image ###
#################
tag-staging arm:
  stage: img:tag
  only:
    - branches
  except:
    - master
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_REF_NAME}
    ARCH: -arm
  script: *tagging

tag-latest arm:
  stage: img:tag
  only:
    - master
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: latest
    ARCH: -arm
  script: *tagging

tag-version arm:
  stage: img:tag
  only:
    - tags
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_TAG}
    ARCH: -arm
  script: *tagging

tag-staging amd64:
  stage: img:tag
  only:
    - branches
  except:
    - master
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_REF_NAME}
    ARCH: -amd64
  script: *tagging

tag-latest amd64:
  stage: img:tag
  only:
    - master
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: latest
    ARCH: -amd64
  script: *tagging

tag-version amd64:
  stage: img:tag
  only:
    - tags
  <<: *runner_socket
  variables:
    <<: *global_variables
    NEW_TAG: ${CI_COMMIT_TAG}
    ARCH: -amd64
  script: *tagging
